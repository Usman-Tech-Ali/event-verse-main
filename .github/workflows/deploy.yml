name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker to use Minikube's environment
        shell: powershell
        run: |
          & minikube -p minikube docker-env --shell powershell | Invoke-Expression
          Write-Output "Docker environment set up"

      - name: Verify Docker Environment
        shell: powershell
        run: |
          docker --version
          docker info --format '{{.ServerVersion}}'

      - name: Debug Secrets
        shell: powershell
        run: |
          $username = "${{ secrets.DOCKER_USERNAME }}"
          $password = "${{ secrets.DOCKER_PASSWORD }}"
          Write-Output "Resolved Username: $username"
          Write-Output "Password set: [REDACTED]"
          if ([string]::IsNullOrEmpty($username) -or [string]::IsNullOrEmpty($password)) {
            throw "One or more secrets are empty or not set"
          }
          Write-Output "Secrets are set correctly"

      - name: Login to Docker Hub
        shell: powershell
        run: |
          Write-Output "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          if ($LASTEXITCODE -ne 0) { throw "Docker login failed" }

      - name: Build and Push Frontend Docker Image
        run: |
          docker build -f app/frontend/Dockerfile -t usmanali2005/event-verse-frontend:latest .
          docker push usmanali2005/event-verse-frontend:latest

      - name: Build and Push Backend Docker Image
        run: |
          docker build -f app/backend/Dockerfile -t usmanali2005/event-verse-backend:latest .
          docker push usmanali2005/event-verse-backend:latest

      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/mongodb-deployment.yaml
          kubectl apply -f k8s/mongodb-service.yaml
